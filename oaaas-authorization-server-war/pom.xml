<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <parent>
    <artifactId>oaaas-parent</artifactId>
    <groupId>nl.surfnet.oaaas</groupId>
    <version>0.1-SNAPSHOT</version>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <artifactId>oaaas-authorization-server-war</artifactId>
  <packaging>war</packaging>
  <name>OA-aaS - authorization server webapp</name>


  <properties>
    <servlet.port>8080</servlet.port>
  </properties>
  <dependencies>
    <dependency>
      <groupId>nl.surfnet.oaaas</groupId>
      <artifactId>oaaas-authorization-server</artifactId>
      <version>${project.version}</version>
      <exclusions>
        <!-- TODO: remove exlusions once DropWizard has been removed from the jar. -->
        <exclusion>
          <groupId>com.yammer.dropwizard</groupId>
          <artifactId>dropwizard-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.yammer.dropwizard</groupId>
          <artifactId>dropwizard-views</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.sun.jersey</groupId>
      <artifactId>jersey-servlet</artifactId>
      <version>1.13</version>
    </dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
    </dependency>

    <dependency>
      <groupId>com.sun.jersey.contribs</groupId>
      <artifactId>jersey-spring</artifactId>
      <version>1.13</version>

      <exclusions>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-web</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-beans</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-context</artifactId>
        </exclusion>
        <exclusion>
          <groupId>org.springframework</groupId>
          <artifactId>spring-aop</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.0.6</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>log4j-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jcl-over-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>jul-to-slf4j</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
  </dependencies>

  <build>
    <pluginManagement>
      <plugins>

      <!--
      Basic configuration for Cargo.
      Do mind that no specific container is declared here.
      This is deferred to the profiles section: there the plugin is refined
      with a specific container.
      -->
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <version>1.2.3</version>
        <configuration>
          <configuration>
            <properties>
              <cargo.servlet.port>${servlet.port}</cargo.servlet.port>
            </properties>
          </configuration>
          <deployables>
            <!-- The project's artifact is automatically deployed if no deployable
                      is defined. However, we define it here so that we can specify the context
                      (we don't want the version to be included in the context). -->
            <deployable>
              <groupId>${project.groupId}</groupId>
              <artifactId>${project.artifactId}</artifactId>
              <type>war</type>
              <properties>
                <context>/</context>
              </properties>
            </deployable>
          </deployables>
        </configuration>
      </plugin>
      </plugins>
    </pluginManagement>

    <plugins>

      <!--
      Run the failsafe plugin which executes all **TestIT tests.
      -->
      <plugin>
        <artifactId>maven-failsafe-plugin</artifactId>
        <version>2.12</version>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
          </execution>
        </executions>
      </plugin>



      <!--
      Start the configured container before running the IT tests.
      Stop it afterwards.
      -->
      <plugin>
        <groupId>org.codehaus.cargo</groupId>
        <artifactId>cargo-maven2-plugin</artifactId>
        <executions>
          <execution>
            <id>start-cargo</id>
            <phase>pre-integration-test</phase>
            <goals>
              <goal>start</goal>
            </goals>
          </execution>
          <execution>
            <id>stop-cargo</id>
            <phase>post-integration-test</phase>
            <goals>
              <goal>stop</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

    </plugins>
  </build>

  <profiles>

    <!--
    Actually tie a specific container to the cargo plugin.
    Could be another container as well, if desired.
    Refer to the Cargo documentation for ideas:
    http://cargo.codehaus.org/Containers
    -->
    <profile>
      <id>jetty7x</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.codehaus.cargo</groupId>
              <artifactId>cargo-maven2-plugin</artifactId>
              <configuration>
                <container>
                  <containerId>jetty7x</containerId>
                  <artifactInstaller>
                    <groupId>org.eclipse.jetty</groupId>
                    <artifactId>jetty-distribution</artifactId>
                    <version>7.6.4.v20120524</version>
                  </artifactInstaller>
                </container>
              </configuration>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
</project>
